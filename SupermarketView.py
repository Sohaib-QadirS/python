# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUIView.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import csv
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from SupermarketController import Supermarket
from PyQt5.QtGui import QIntValidator,QDoubleValidator,QFont
import sys

supermarket = Supermarket()  # creating an instance of the Supermarket obj
# loads Customers from the csv provided
with open('Customers.txt', newline='') as csv_file:  # loads the csv file
    spam_reader = csv.reader(csv_file, quotechar='|')  # breaks up each line
    for row in spam_reader:
        supermarket.addCustomer(row[0])  # each item is converted to a cus obj

customers = []
# Dictionary with customers
for cus in supermarket.getCustomerList:
    customers.append(cus.getMyName)

class Ui_MainWindow(object):
    # method called by combo box
    cardNum = ""
    itemType = ""
    def customer_selected(self):
        global cardNum
        cardNum = (supermarket.findCustomerID(self.comboBoxCusName.currentText()))
        self.lineEditCardNum.setText(str(cardNum))
        self.groupBoxTransaction.setEnabled(False)
        return str(cardNum)

    def month_selected(self):
        self.plainTextEditSelMonth.setPlainText("")
        saleReport = supermarket.salesByMonth(self.comboBoxSelMonth.currentText())
        for i in saleReport:
            self.plainTextEditSelMonth.insertPlainText("{0}\n".format(i))

    def startShopping(self):
        supermarket.startShopping(self.comboBoxCusName.currentText())
        self.groupBoxTransaction.setEnabled(True)

    def radioItems(self, val):
        if(val.text() == "Unit Item"):
            if(val.isChecked()):
                print("Unit Item")
                self.groupBoxUnit.setEnabled(True)
                self.groupBoxWeight.setEnabled(False)
                self.lineEditPricePerKilo.setText("")
                self.lineEditWeight.setText("")
                self.lineEditProductName.setText("")

        elif(val.text() == "Weight Item"):
            if (val.isChecked()):
                print("Weight Item")
                self.groupBoxUnit.setEnabled(False)
                self.groupBoxWeight.setEnabled(True)
                self.lineEditNumUnits.setText("")
                self.lineEditPricePerUnit.setText("")
                self.lineEditProductName.setText("")
        self.lineEditProductName.setEnabled(True)

    def addItem(self):
        try:
            if(self.lineEditProductName.text() == ""):
                raise NoProductNameError
            else:
                if (self.radioButtonUnit.text() == "Unit Item" and self.radioButtonUnit.isChecked()):
                    if(self.lineEditPricePerUnit.text() == ""):
                        raise NoProductPriceError
                    if(self.lineEditNumUnits.text() == ""):
                        raise NoNumUnitsError
                    else:
                        supermarket.addUnitItem(self.comboBoxCusName.currentText(), self.lineEditProductName.text(), float(self.lineEditPricePerUnit.text()), int(self.lineEditNumUnits.text()))
                        self.plainTextEditCartItems.insertPlainText(
                            supermarket.findCurrItem(supermarket.findCurrCart(self.comboBoxCusName.currentText())) + "\n")
                        self.lineEditNumUnits.setText("")
                        self.lineEditPricePerUnit.setText("")
                        self.lineEditProductName.setText("")
                else:
                    if (self.lineEditPricePerKilo.text() == ""):
                        raise NoProductPriceError
                    else:
                        supermarket.addWeightItem(self.comboBoxCusName.currentText(), self.lineEditProductName.text(),
                                            float(self.lineEditPricePerKilo.text()))
                        self.lineEditWeight.setText(supermarket.findCurrWeight(supermarket.findCurrCart(self.comboBoxCusName.currentText())))

                        self.plainTextEditCartItems.insertPlainText(supermarket.findCurrItem(supermarket.findCurrCart(self.comboBoxCusName.currentText())) +"\n")
                        self.lineEditPricePerKilo.setText("")
                        #self.lineEditWeight.setText("")
                        self.lineEditProductName.setText("")
        except:
            print("Unknown error")

    def addCart(self):
        # if(self.plainTextEditCartItems.toPlainText()!=""):
        try:
            if (self.plainTextEditCartItems.toPlainText() == ""):
                raise NoItemError
            else:
                supermarket.addCart(self.comboBoxCusName.currentText())
                total = supermarket.currCartinfo(self.comboBoxCusName.currentText()).split()
                self.lineEditTotalCost.setText(total[1])
                self.lineEditNumUnits.setText("")
                self.lineEditPricePerUnit.setText("")
                self.lineEditPricePerKilo.setText("")
                self.lineEditWeight.setText("")
                self.lineEditProductName.setText("")
                self.plainTextEditCartItems.setPlainText("")
        except:
            print("Unexpected error")
        finally:
            supermarket.startShopping(self.comboBoxCusName.currentText())

    def checkOut(self):
        self.plainTextEditCartItems.setPlainText("")
        self.lineEditTotalCost.setText("")

        self.lineEditNumUnits.setText("")
        self.lineEditPricePerUnit.setText("")
        self.lineEditPricePerKilo.setText("")
        self.lineEditWeight.setText("")
        self.lineEditProductName.setText("")
        self.lineEditTotalCost.setText("")
        self.groupBoxTransaction.setEnabled(False)

    def customerInformation(self):
        self.plainTextEditCusInfo.setPlainText("")
        cusinfo = supermarket.cusInformation(self.comboBoxCusName.currentText())
        for i in cusinfo:
            self.plainTextEditCusInfo.insertPlainText("{0}\n".format(i))

    def salesByCustomer(self):
        self.plainTextEditSalesByCus.setPlainText("")
        allcusinfo = supermarket.salesByCustomer()
        for i in allcusinfo:
            self.plainTextEditSalesByCus.insertPlainText("{0}\n".format(i))

    # avgCustomerSpending
    def averageCart(self):
        print(supermarket.avgCustomerSpending())
        print(supermarket.getCustAvg())
        self.lineEditAvgCart.setText("${:,.2f}".format(supermarket.getCustAvg()))

    def total_Sales(self):
        print(supermarket.totalSalesCus())
        self.lineEditTotalsales.setText("${:,.2f}".format(supermarket.totalSalesCus()))

    def findTopCus(self):
        print(supermarket.findLargestPurchaseTotal())
        self.lineEditTopCus.setText(supermarket.findLargestPurchaseTotal())


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(560, 800)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setEnabled(True)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBoxCusDetails = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBoxCusDetails.setGeometry(QtCore.QRect(10, 60, 541, 121))
        self.groupBoxCusDetails.setObjectName("groupBoxCusDetails")
        self.labelCusName = QtWidgets.QLabel(self.groupBoxCusDetails)
        self.labelCusName.setGeometry(QtCore.QRect(40, 20, 91, 16))
        self.labelCusName.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.labelCusName.setObjectName("labelCusName")

        self.comboBoxCusName = QtWidgets.QComboBox(self.groupBoxCusDetails)
        self.comboBoxCusName.addItems(customers)
        self.comboBoxCusName.setGeometry(QtCore.QRect(130, 20, 111, 22))
        self.comboBoxCusName.setMaxVisibleItems(20)
        self.comboBoxCusName.setObjectName("comboBoxCusName")
        # adding action to combo box
        self.comboBoxCusName.activated.connect(self.customer_selected)

        self.labelCardNum = QtWidgets.QLabel(self.groupBoxCusDetails)
        self.labelCardNum.setGeometry(QtCore.QRect(290, 20, 71, 16))
        self.labelCardNum.setObjectName("labelCardNum")
        self.lineEditCardNum = QtWidgets.QLineEdit(self.groupBoxCusDetails)
        self.lineEditCardNum.setEnabled(False)
        self.lineEditCardNum.setGeometry(QtCore.QRect(380, 20, 113, 20))
        self.lineEditCardNum.setObjectName("lineEditCardNum")

        self.pushButtonStartShopping = QtWidgets.QPushButton(self.groupBoxCusDetails)
        self.pushButtonStartShopping.setGeometry(QtCore.QRect(10, 80, 91, 23))
        self.pushButtonStartShopping.setObjectName("pushButtonStartShopping")
        ########## adding action
        self.pushButtonStartShopping.toggle()
        self.pushButtonStartShopping.clicked.connect(self.startShopping)


        # self.pushButtonNewCustomer = QtWidgets.QPushButton(self.groupBoxCusDetails)
        # self.pushButtonNewCustomer.setGeometry(QtCore.QRect(130, 80, 111, 23))
        # self.pushButtonNewCustomer.setObjectName("pushButtonNewCustomer")

        self.pushButtonExit = QtWidgets.QPushButton(self.groupBoxCusDetails)
        self.pushButtonExit.setGeometry(QtCore.QRect(380, 80, 111, 23))
        self.pushButtonExit.clicked.connect(sys.exit)

        self.labelTopHeading = QtWidgets.QLabel(self.centralwidget)
        self.labelTopHeading.setGeometry(QtCore.QRect(180, 10, 230, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.labelTopHeading.setFont(font)
        self.labelTopHeading.setObjectName("labelTopHeading")

        self.groupBoxTransaction = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBoxTransaction.setEnabled(False)
        self.groupBoxTransaction.setGeometry(QtCore.QRect(10, 200, 541, 241))
        self.groupBoxTransaction.setObjectName("groupBoxTransaction")
        self.labelProductName = QtWidgets.QLabel(self.groupBoxTransaction)
        self.labelProductName.setGeometry(QtCore.QRect(120, 20, 81, 16))
        self.labelProductName.setObjectName("labelProductName")
        self.lineEditProductName = QtWidgets.QLineEdit(self.groupBoxTransaction)
        self.lineEditProductName.setEnabled(False)
        self.lineEditProductName.setGeometry(QtCore.QRect(200, 20, 113, 20))
        self.lineEditProductName.setObjectName("lineEditProductName")
        self.groupBoxItyemType = QtWidgets.QGroupBox(self.groupBoxTransaction)
        self.groupBoxItyemType.setGeometry(QtCore.QRect(140, 50, 120, 80))
        self.groupBoxItyemType.setObjectName("groupBoxItyemType")

        self.radioButtonUnit = QtWidgets.QRadioButton(self.groupBoxItyemType)
        self.radioButtonUnit.setEnabled(True)
        self.radioButtonUnit.setGeometry(QtCore.QRect(20, 20, 82, 17))
        self.radioButtonUnit.setObjectName("radioButtonUnit")
        self.radioButtonWeight = QtWidgets.QRadioButton(self.groupBoxItyemType)
        self.radioButtonWeight.setEnabled(True)
        self.radioButtonWeight.setGeometry(QtCore.QRect(20, 40, 82, 17))
        self.radioButtonWeight.setObjectName("radioButtonWeight")
        #### action

        self.radioButtonUnit.toggled.connect(lambda:self.radioItems(self.radioButtonUnit))
        self.radioButtonWeight.toggled.connect(lambda:self.radioItems(self.radioButtonWeight))


        self.plainTextEditCartItems = QtWidgets.QPlainTextEdit(self.groupBoxTransaction)
        self.plainTextEditCartItems.setEnabled(True)
        self.plainTextEditCartItems.setReadOnly(True)
        self.plainTextEditCartItems.setGeometry(QtCore.QRect(337, 10, 181, 91))
        self.plainTextEditCartItems.setPlainText("")
        self.plainTextEditCartItems.setObjectName("plainTextEditCartItems")

        self.groupBoxUnit = QtWidgets.QGroupBox(self.groupBoxTransaction)
        self.groupBoxUnit.setEnabled(False)
        self.groupBoxUnit.setGeometry(QtCore.QRect(10, 140, 161, 80))
        self.groupBoxUnit.setObjectName("groupBoxUnit")
        self.labelNumUnits = QtWidgets.QLabel(self.groupBoxUnit)
        self.labelNumUnits.setGeometry(QtCore.QRect(10, 20, 81, 21))
        self.labelNumUnits.setObjectName("labelNumUnits")

        self.lineEditNumUnits = QtWidgets.QLineEdit(self.groupBoxUnit)
        self.lineEditNumUnits.setGeometry(QtCore.QRect(100, 20, 51, 20))
        self.lineEditNumUnits.setObjectName("lineEditNumUnits")
        self.lineEditNumUnits.setValidator(QIntValidator())

        self.labelPricePerUnit = QtWidgets.QLabel(self.groupBoxUnit)
        self.labelPricePerUnit.setGeometry(QtCore.QRect(10, 50, 71, 16))
        self.labelPricePerUnit.setObjectName("labelPricePerUnit")

        self.lineEditPricePerUnit = QtWidgets.QLineEdit(self.groupBoxUnit)
        self.lineEditPricePerUnit.setGeometry(QtCore.QRect(100, 50, 51, 20))
        self.lineEditPricePerUnit.setObjectName("lineEditPricePerUnit")
        self.lineEditPricePerUnit.setValidator(QDoubleValidator(0.99,99.99,2))

        self.groupBoxWeight = QtWidgets.QGroupBox(self.groupBoxTransaction)
        self.groupBoxWeight.setEnabled(False)
        self.groupBoxWeight.setGeometry(QtCore.QRect(180, 140, 151, 80))
        self.groupBoxWeight.setObjectName("groupBoxWeight")
        self.labelKilo = QtWidgets.QLabel(self.groupBoxWeight)
        self.labelKilo.setGeometry(QtCore.QRect(10, 20, 81, 21))
        self.labelKilo.setObjectName("labelKilo")

        self.lineEditPricePerKilo = QtWidgets.QLineEdit(self.groupBoxWeight)
        self.lineEditPricePerKilo.setGeometry(QtCore.QRect(90, 20, 51, 20))
        self.lineEditPricePerKilo.setObjectName("lineEditPricePerKilo")
        self.lineEditPricePerKilo.setValidator(QDoubleValidator(0.99,99.99,2))

        self.labelWeight = QtWidgets.QLabel(self.groupBoxWeight)
        self.labelWeight.setGeometry(QtCore.QRect(10, 50, 71, 16))
        self.labelWeight.setObjectName("labelWeight")
        self.lineEditWeight = QtWidgets.QLineEdit(self.groupBoxWeight)
        self.lineEditWeight.setEnabled(False)
        self.lineEditWeight.setGeometry(QtCore.QRect(90, 50, 51, 20))
        self.lineEditWeight.setObjectName("lineEditWeight")

        self.pushButtonAddCart = QtWidgets.QPushButton(self.groupBoxTransaction)
        self.pushButtonAddCart.setGeometry(QtCore.QRect(440, 110, 75, 23))
        self.pushButtonAddCart.setObjectName("pushButtonAddCart")
        ###### Action
        self.pushButtonAddCart.toggle()
        self.pushButtonAddCart.clicked.connect(self.addCart)

        self.pushButtonNewItem = QtWidgets.QPushButton(self.groupBoxTransaction)
        self.pushButtonNewItem.setGeometry(QtCore.QRect(350, 110, 75, 23))
        self.pushButtonNewItem.setObjectName("pushButtonNewItem")
        ###### Action
        self.pushButtonNewItem.toggle()
        self.pushButtonNewItem.clicked.connect(self.addItem)

        self.pushButtonCheckOut = QtWidgets.QPushButton(self.groupBoxTransaction)
        self.pushButtonCheckOut.setGeometry(QtCore.QRect(400, 140, 75, 23))
        self.pushButtonCheckOut.setObjectName("pushButtonCheckOut")
        ########## adding action
        self.pushButtonCheckOut.toggle()
        self.pushButtonCheckOut.clicked.connect(self.checkOut)


        self.labelTotal = QtWidgets.QLabel(self.groupBoxTransaction)
        self.labelTotal.setGeometry(QtCore.QRect(358, 200, 51, 20))
        self.labelTotal.setObjectName("labelTotal")
        self.lineEditTotalCost = QtWidgets.QLineEdit(self.groupBoxTransaction)
        self.lineEditTotalCost.setEnabled(False)
        self.lineEditTotalCost.setGeometry(QtCore.QRect(420, 200, 91, 20))
        self.lineEditTotalCost.setText("")
        self.lineEditTotalCost.setObjectName("lineEditTotalCost")


        self.groupBoxSummary = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBoxSummary.setGeometry(QtCore.QRect(10, 460, 541, 211))
        self.groupBoxSummary.setObjectName("groupBoxSummary")
        self.pushButtonTotalSales = QtWidgets.QPushButton(self.groupBoxSummary)
        self.pushButtonTotalSales.setGeometry(QtCore.QRect(430, 80, 100, 23))
        self.pushButtonTotalSales.setObjectName("pushButtonTotalSales")

        self.pushButtonTotalSales.toggle()
        self.pushButtonTotalSales.clicked.connect(self.total_Sales)

        self.pushButtonTopCustomer = QtWidgets.QPushButton(self.groupBoxSummary)
        self.pushButtonTopCustomer.setGeometry(QtCore.QRect(430, 140, 100, 23))
        self.pushButtonTopCustomer.setObjectName("pushButtonTopCustomer")

        self.pushButtonTopCustomer.toggle()
        self.pushButtonTopCustomer.clicked.connect(self.findTopCus)

        self.pushButtonAverageCart = QtWidgets.QPushButton(self.groupBoxSummary)
        self.pushButtonAverageCart.setGeometry(QtCore.QRect(430, 20, 100, 23))
        self.pushButtonAverageCart.setObjectName("pushButtonAverageCart")

        self.pushButtonAverageCart.toggle()
        self.pushButtonAverageCart.clicked.connect(self.averageCart)

        self.pushButtonSalesbyCustomer = QtWidgets.QPushButton(self.groupBoxSummary)
        self.pushButtonSalesbyCustomer.setGeometry(QtCore.QRect(260, 170, 111, 23))
        self.pushButtonSalesbyCustomer.setObjectName("pushButtonSalesbyCustomer")

        self.pushButtonSalesbyCustomer.toggle()
        self.pushButtonSalesbyCustomer.clicked.connect(self.salesByCustomer)

        self.pushButtonCustomerInformation = QtWidgets.QPushButton(self.groupBoxSummary)
        self.pushButtonCustomerInformation.setGeometry(QtCore.QRect(20, 170, 131, 23))
        self.pushButtonCustomerInformation.setObjectName("pushButtonCustomerInformation")
        ########## adding action
        self.pushButtonCustomerInformation.toggle()
        self.pushButtonCustomerInformation.clicked.connect(self.customerInformation)

        self.plainTextEditCusInfo = QtWidgets.QPlainTextEdit(self.groupBoxSummary)
        self.plainTextEditCusInfo.setEnabled(True)
        self.plainTextEditCusInfo.setReadOnly(True)
        self.plainTextEditCusInfo.setGeometry(QtCore.QRect(10, 20, 200, 141))
        self.plainTextEditCusInfo.setPlainText("")
        self.plainTextEditCusInfo.setObjectName("plainTextEditCusInfo")

        self.plainTextEditSalesByCus = QtWidgets.QPlainTextEdit(self.groupBoxSummary)
        self.plainTextEditSalesByCus.setEnabled(True)
        self.plainTextEditSalesByCus.setReadOnly(True)
        self.plainTextEditSalesByCus.setGeometry(QtCore.QRect(220, 20, 200, 141))
        self.plainTextEditSalesByCus.setObjectName("plainTextEditSalesByCus")

        self.lineEditAvgCart = QtWidgets.QLineEdit(self.groupBoxSummary)
        self.lineEditAvgCart.setEnabled(False)
        self.lineEditAvgCart.setGeometry(QtCore.QRect(430, 50, 100, 20))
        self.lineEditAvgCart.setObjectName("lineEditAvgCart")
        self.lineEditTotalsales = QtWidgets.QLineEdit(self.groupBoxSummary)
        self.lineEditTotalsales.setEnabled(False)
        self.lineEditTotalsales.setGeometry(QtCore.QRect(430, 110, 100, 20))
        self.lineEditTotalsales.setObjectName("lineEditTotalsales")
        self.lineEditTopCus = QtWidgets.QLineEdit(self.groupBoxSummary)
        self.lineEditTopCus.setEnabled(False)
        self.lineEditTopCus.setGeometry(QtCore.QRect(430, 170, 100, 20))
        self.lineEditTopCus.setObjectName("lineEditTopCus")

        self.groupBoxSelMonth = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBoxSelMonth.setGeometry(QtCore.QRect(10, 680, 541, 80))
        self.groupBoxSelMonth.setObjectName("groupBoxSelMonth")
        self.plainTextEditSelMonth = QtWidgets.QPlainTextEdit(self.groupBoxSelMonth)
        self.plainTextEditSelMonth.setGeometry(QtCore.QRect(150, 10, 321, 51))
        self.plainTextEditSelMonth.setReadOnly(True)
        self.plainTextEditSelMonth.setObjectName("plainTextEditSelMonth")
        self.comboBoxSelMonth = QtWidgets.QComboBox(self.groupBoxSelMonth)
        self.comboBoxSelMonth.addItems(["01","02","03","04","05","06","07","08","09","10","11","12"])
        self.comboBoxSelMonth.setGeometry(QtCore.QRect(20, 40, 101, 22))
        self.comboBoxSelMonth.setObjectName("comboBoxSelMonth")

        self.comboBoxSelMonth.activated.connect(self.month_selected)
        self.label = QtWidgets.QLabel(self.groupBoxSelMonth)
        self.label.setGeometry(QtCore.QRect(40, 20, 71, 16))
        self.label.setObjectName("label")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 580, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Supermarket Application"))
        self.groupBoxCusDetails.setTitle(_translate("MainWindow", "Customer Detail"))
        self.labelCusName.setText(_translate("MainWindow", "Customer Name:"))
        self.labelCardNum.setText(_translate("MainWindow", "Card Number:"))
        # self.pushButtonNewCustomer.setText(_translate("MainWindow", "New Customer"))
        self.pushButtonExit.setText(_translate("MainWindow", "Exit"))
        self.labelTopHeading.setText(_translate("MainWindow", "Lincoln Supermarket"))
        self.groupBoxTransaction.setTitle(_translate("MainWindow", "Transaction"))
        self.labelProductName.setText(_translate("MainWindow", "Product Name:"))
        self.groupBoxItyemType.setTitle(_translate("MainWindow", "Ityem Type"))
        self.radioButtonUnit.setText(_translate("MainWindow", "Unit Item"))
        self.radioButtonWeight.setText(_translate("MainWindow", "Weight Item"))
        self.groupBoxUnit.setTitle(_translate("MainWindow", "Unit Item"))
        self.labelNumUnits.setText(_translate("MainWindow", "Number of Units:"))
        self.labelPricePerUnit.setText(_translate("MainWindow", "Price per Unit:"))
        self.groupBoxWeight.setTitle(_translate("MainWindow", "Weight Item"))
        self.labelKilo.setText(_translate("MainWindow", "Price per Kilo:"))
        self.labelWeight.setText(_translate("MainWindow", "Weight:"))

        self.pushButtonAddCart.setText(_translate("MainWindow", "Add Cart"))
        self.pushButtonNewItem.setText(_translate("MainWindow", "New Item"))
        self.pushButtonCheckOut.setText(_translate("MainWindow", "Checkout"))

        self.labelTotal.setText(_translate("MainWindow", "Total Cost:"))
        self.pushButtonStartShopping.setText(_translate("MainWindow", "Start Shopping"))
        self.groupBoxSummary.setTitle(_translate("MainWindow", "Summary"))
        self.pushButtonTotalSales.setText(_translate("MainWindow", "Total Sales"))
        self.pushButtonTopCustomer.setText(_translate("MainWindow", "Top Customer"))
        self.pushButtonAverageCart.setText(_translate("MainWindow", "Average Cart"))
        self.pushButtonSalesbyCustomer.setText(_translate("MainWindow", "Sales by Customer"))
        self.pushButtonCustomerInformation.setText(_translate("MainWindow", "Customer Information"))

        self.groupBoxSelMonth.setTitle(_translate("MainWindow", "Month based sales:"))
        self.label.setText(_translate("MainWindow", "Select Month:"))

#define own exception
class NoItemError(Exception):
    def __init__(self, message="Error"):
        msg = QMessageBox()  # EXCEPTION MESSAGE ONE
        msg.setIcon(2)
        msg.setText("No items found")
        msg.setInformativeText("Please add items to your cart")
        msg.setWindowTitle("Error")
        msg.show()
        msg.exec_()
#define own exception
class NoProductNameError(Exception):
    def __init__(self, message = "Error"):
        msg = QMessageBox()  # EXCEPTION MESSAGE ONE
        msg.setIcon(2)
        msg.setText("No Product Name found")
        msg.setInformativeText("Please add ProductName")
        msg.setWindowTitle("Error")
        msg.show()
        msg.exec_()

#define own exception
class NoProductPriceError(Exception):
    def __init__(self, message = "Error"):
        msg = QMessageBox()  # EXCEPTION MESSAGE ONE
        msg.setIcon(2)
        msg.setText("No price found")
        msg.setInformativeText("Please add price")
        msg.setWindowTitle("Error")
        msg.show()
        msg.exec_()

#define own exception
class NoNumUnitsError(Exception):
    def __init__(self, message = "Error"):
        msg = QMessageBox()  # EXCEPTION MESSAGE ONE
        msg.setIcon(2)
        msg.setText("No units found")
        msg.setInformativeText("Please add number of units")
        msg.setWindowTitle("Error")
        msg.show()
        msg.exec_()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())